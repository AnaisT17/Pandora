package fr.seedle.pandora.dao;

import java.util.ArrayList;
import java.util.List;

import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;

import fr.seedle.pandora.dto.MembreDto;
import fr.seedle.pandora.interfaces.dao.MembreDao;
import fr.seedle.pandora.interfaces.dto.Membre;
import fr.seedle.pandora.singleton.HibernateSingleton;

public class MembreDaoImpl implements MembreDao {

	@Override
	public Membre getInstance() {
		return new MembreDto();
	}

	@Override
	public void insert(Membre membre) {
		SessionFactory factory = HibernateSingleton.getInstance().getHibernateConfiguration().getFactory();
		Session session = factory.openSession();
		Transaction tx = null;
		try {
			tx = session.beginTransaction();
			session.save(membre);
			session.flush();
			tx.commit();
		} catch (HibernateException e) {
			if (tx != null) {
				tx.rollback();
			}
			e.printStackTrace();
		} finally {
			session.close();
		}
	}

	@Override
	public void update(Membre membre) {
		SessionFactory factory = HibernateSingleton.getInstance().getHibernateConfiguration().getFactory();
		Session session = factory.openSession();
		Transaction tx = null;
		try {
			tx = session.beginTransaction();
			session.update(membre);
			session.flush();
			tx.commit();
		} catch (HibernateException e) {
			if (tx != null) {
				tx.rollback();
			}
			e.printStackTrace();
		} finally {
			session.close();
		}
	}

	@Override
	public void delete(Membre membre) {
		SessionFactory factory = HibernateSingleton.getInstance().getHibernateConfiguration().getFactory();
		Session session = factory.openSession();
		Transaction tx = null;
		try {
			tx = session.beginTransaction();
			session.delete(membre);
			session.flush();
			tx.commit();
		} catch (HibernateException e) {
			if (tx != null) {
				tx.rollback();
			}
			e.printStackTrace();
		} finally {
			session.close();
		}
	}

	@Override
	public List<Membre> getAll() {
		return new ArrayList<Membre>();
	}

}
