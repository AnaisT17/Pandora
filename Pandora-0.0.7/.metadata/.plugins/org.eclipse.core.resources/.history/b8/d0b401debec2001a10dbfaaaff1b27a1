package fr.seedle.pandora.bean;

import java.util.List;

import javax.annotation.PostConstruct;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ViewScoped;
import javax.faces.context.FacesContext;

import fr.seedle.pandora.dao.RoleDaoImpl;
import fr.seedle.pandora.dto.RoleDto;
import fr.seedle.pandora.interfaces.dao.RoleDao;

@ManagedBean(name = "roleControllerListBean")
@ViewScoped
public class RoleControllerListBean {

	private List<RoleDto> listRoles;

	private RoleDto role;

	/***
	 * Cette méthode possédant l'annotation 'PostConstruct' sera appelée
	 * automatiquement lors de l'instanciation du bean
	 */
	@PostConstruct
	public void init() {
// Nous allons appeler RoleSingleton pour obtenir la liste des roles
		// listRoles = RoleSingleton.getInstance().getListRoles();
		RoleDao roleDao = new RoleDaoImpl();

	}

	public List<RoleDto> getListRoles() {
		return listRoles;
	}

	public void setListRoles(List<RoleDto> listRoles) {
		this.listRoles = listRoles;
	}

	public RoleDto getRole() {
		return role;
	}

	public void setRole(RoleDto role) {
		this.role = role;
	}

	public void onSelect(RoleDto role) {
		this.role = role;

		final FacesContext context = FacesContext.getCurrentInstance();
		final LoginBean loginBean = context.getApplication().evaluateExpressionGet(context, "#{loginBean}",
				LoginBean.class);

		loginBean.getMembreCourant().setRole(this.role);
	}

	public void deSelect() {
		this.role = null;

		final FacesContext context = FacesContext.getCurrentInstance();
		final LoginBean loginBean = context.getApplication().evaluateExpressionGet(context, "#{loginBean}",
				LoginBean.class);

		loginBean.getMembreCourant().setRole(null);
	}
}